#!/usr/bin/env node
// vim:syntax=javascript

var vock = require('..'),
    dns = require('dns'),
    colors = require('colors'),
    argv = require('optimist')
        .usage('Usage:\n' +
               '   vock create\n' +
               '   vock connect {id}')
        .describe('server', 'Server address (host:port)')
        .describe('mute', 'Disable recording')
        .describe('version', 'Show CLI version')
        .boolean('mute')
        .boolean('version')
        .alias('v', 'version')
        .alias('s', 'server')
        .alias('m', 'mute')
        .argv,
    cmd = argv._[0];

function getAddress(addr, callback) {
  addr = addr.split(':', 2);

  var host = addr[0] || '0.0.0.0',
      port = addr[1] || 44123;

  dns.lookup(host, function(err, address) {
    if (err) {
      console.error('Failed to find server %s:%d'.red, host, port);
      process.exit(1);
    }

    callback(address, port);
  });
};

// Show version
if (argv.version) {
  console.log('vock v%s', vock.version);
  process.exit(0);
}

// Get server's IP and perform actions!
var server = argv.server || argv.s || 'vock.indutny.com:43210';
getAddress(server, function(address, port) {
  argv.server = { address: address, port: port };

  var instance = vock.instance.create(argv);
  instance.on('error', function(err) {
    throw err;
  });

  if (cmd === 'create') {
    instance.api.create(function(err, id) {
      if (err) throw err;

      console.log('Room created!'.green);
      console.log('Run this on other side:');
      console.log('  vock connect ' + id);
      console.log('Waiting for opponent...');

      instance.api.watch(id, function(err, addrs) {
        if (err) throw err;

        var target = addrs[addrs.length - 1];
        console.log('Opponent appeared: '.green + '%s %d',
                    target.address,
                    target.port);
        instance.connect(id, target.port, target.address, function() {
          console.log('Connected!'.green);
        });
      });
    });
    return;
  } else if (cmd === 'connect' && argv._[1]) {
    instance.api.connect(argv._[1], function(err, addrs) {
      if (err) throw err;

      var target = addrs[0];
      console.log('Got opponent\'s address: '.green + '%s:%d',
                  target.address,
                  target.port);
      instance.connect(argv._[1], target.port, target.address, function() {
        console.log('Connected!'.green);
      });
    });
    return;
  }

  require('optimist').showHelp()
  process.exit(0);
});
